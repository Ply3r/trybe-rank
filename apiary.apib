FORMAT: 1A
HOST: https://tryberank-api.herokuapp.com/

# TrybeRank

TrybeRank API allows for the communication between the Front-end React Web Application and the Back-end MongoDB database.
The communication is made with the use of endpoints described in this document

## User Routes [/user]
User-related routes

### Information [GET]

This route is used to GET current user information such as nickname, progress in the quizes, etc.

+ Request
    + Headers
        
            Authorization: JWT Token

+ Response 200 (application/json)
    
        {
            username: "Tester" (string),
            nickname: "Tester" (string),
            completed_questions: [...] (object[]),
            completed_quizes: [...] (object[]),
            image_url: "https://avatars.githubusercontent.com/u/63298781?v=4" (string)
        }


### Create [POST]

You may add a new user using this POST route.

+ Request (application/json)
    + Body
    
            {
                username: "Tester" (string)
                password: "Password123" (string)
            }

+ Response 201 (application/json)
       
        {
            username: "Tester" (string)
            password: "Password123" (string)
        }

### Update Information [PUT]

You may update current user's information with this PUT route.

+ Request (application/json)
    + Headers
    
            Authorization: JWT Token

    + Body
    
            {
                username: "Tester" (string)
                nickname: "Tester" (string)
                image_url: "https://avatars.githubusercontent.com/u/63298781?v=4" (string)
            }

+ Response 200 (application/json)
        
        {
            username: "Tester" (string)
            nickname: "Tester" (string)
            image_url: "https://avatars.githubusercontent.com/u/63298781?v=4" (string)
        }

### Update Questions [PATCH]

User completed questions, quizes and points are updated using this PATCH route.

+ Request (application/json)
    + Headers
    
            Authorization: JWT Token

    + Body
    
            {
                newQuestions: [...] (object[])
                newQuiz: {...} (object)
            }

+ Response 200 (application/json)
        
        {
            username: "Tester" (string)
            completed_questions: [...] (object[])
            completed_quizes: [...] (object[])
        }

## Questions Routes [/questions]
Question-related routes

### List All [GET]

This route is used to GET every quiz questions in the database

+ Response 200 (application/json)
        
        [
            {
                _id: "61f5edf862b94ab0c5ca6f39" (string),
                question: "O que faz o segundo par창metro de `reduce`?" (string),
                type: "reduce" (string),
                difficulty: "Dificil" (string),
                answers: {...} (object),
                correct_id: "61f5edf862b94ab0c5ca6f35" (string)
            }
        ]

### List By Type [GET /questions/{type}]

This route is used to GET every quiz questions in the database

+ Parameters
    + type (string) - Type of the question (Higher Order Function name)

+ Response 200 (application/json)
        
        [
            {
                _id: "61f5ee5e62b94ab0c5ca6f3e" (string),
                question: "O que o `.map()` recebe como primeiro par창metro?" (string),
                type: "map" (string),
                difficulty: "Dificil" (string),
                answers: {...} (object),
                correct_id: "61f5ee5e62b94ab0c5ca6f3a" (string)
            }
        ]

### Create [POST]

This POST route is used to create a new question in the database.

+ Request (application/json)
    + Body
    
            {
                question: "O que o `.map()` recebe como primeiro par창metro?" (string),
                type: "map" (string),
                difficulty: "Dificil" (string),
                answers: {...} (object) //First answer is the correct
            }

+ Response 201 (application/json)
       
        {
                _id: "61f5ee5e62b94ab0c5ca6f3e" (string),
                question: "O que o `.map()` recebe como primeiro par창metro?" (string),
                type: "map" (string),
                difficulty: "Dificil" (string),
                answers: {...} (object),
                correct_id: "61f5ee5e62b94ab0c5ca6f3a" (string)
        }

## Types Routes [/types]
Type-related routes

### List All [GET]

This route is used to GET every type of question available in the application.

+ Response 200 (application/json)
        
        [
            {
                _id: "61e83875f0aa7158f5dab6e6" (string),
                color: "00E593" (string),
                difficulty: 5 (number),
                name: "reduce" (string),
            }
        ]

### Create [POST /types]

This route is used to POST a new type in the database

+ Request (application/json)
    + Body
    
            {
                name: "map" (string),
                color: "83BCFF" (string),
                difficulty: 1 (number),
            }

+ Response 201 (application/json)
       
        {
            _id: "61e83875f0aa7158f5dab6e5" (string),  
            name: "map" (string),
            color: "83BCFF" (string),
            difficulty: 1 (number),
        }